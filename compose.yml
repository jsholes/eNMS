services:
  enms:
    restart: always
    environment:
      - DATABASE_URL=postgresql://enms:enms@enmsdb:5432/enmsdb
      - SECRET_KEY=docker
      - CONFIG_MODE=production
      - VAULT_ADDR=http://enmsvault:8200
      - USE_VAULT=1
    build:
      context: .
      dockerfile: build/docker/Dockerfile
    networks:
    - db_network
    - web_network
    expose:
    - 5000
    depends_on:
      - db
      - vault

  #Database
  db:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    hostname: enmsdb
    networks:
      - db_network
    container_name: enmsdb
    environment:
      - POSTGRES_USER=enms
      - POSTGRES_PASSWORD=enms
      - POSTGRES_DB=enmsdb
    volumes:
      - postgres_data:/var/lib/postgresql/data

  vault:
    image: hashicorp/vault
    hostname: enmsvault
    container_name: enmsvault
    networks:
      - web_network
    volumes: 
      - ./resources/vault:/vault/config
      - ./vault/policies:/vault/policies
      - ./vault/data:/vault/data
      - ./vault/logs:/vault/logs
    environment:
      - VAULT_TOKEN=02630000-0409-0201-2080-060070400301
    cap_add:
        #capacity to container add
        - IPC_LOCK

  proxy:
    image: nginx:latest
    container_name: prod_nginx
    volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./certs:/etc/ssl
    ports:
     - "80:80"
    depends_on:
     - enms
    networks: 
     - web_network

networks:
  db_network:
    driver: bridge
  web_network:
     driver: bridge

volumes:
  postgres_data:



# version: "3"
# services:
#   enms:
#     image: gnubyte/enms
#     hostname: enms
#     container_name: enms
#     restart: always
#     ports:
#         - 80:5000
#     networks:
#       - backend
#     volumes:
#       - ./logs:/opt/enms/logs
#       - ./network_data:/opt/enms/network_data
#     networks:
#       - backend
#     environment:
#       - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASS}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
#       - VAULT_ADDR=http://${VAULT_HOST}:${VAULT_PORT}
#       - VAULT_TOKEN=${VAULT_TOKEN}
#     links:
#       - db
#       - vault
#   # Database
#   db:
#     image: mysql:5.7
#     hostname: enmsdb
#     container_name: enmsdb
#     networks:
#       - backend
#     volumes:
#       - ./db:/var/lib/mysql
#       - ./resources/mysql/init.sql:/opt/init.sql
#     environment:
#       - MYSQL_ROOT_USER=${DATABASE_ROOT_USER}
#       - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASS}
#       - MYSQL_DATABASE=${DATABASE_NAME}
#       - MYSQL_USER=${DATABASE_USER}
#       - MYSQL_PASSWORD=${DATABASE_PASS}
#     command: --init-file /opt/init.sql
#   # Hashivault Vault Project (Secrets Secure Storage)
#   vault:
#     image: vault
#     hostname: enmsvault
#     container_name: enmsvault
#     networks:
#       - backend
#     volumes: 
#       - ./resources/vault:/vault/config
#       - ./vault/policies:/vault/policies
#       - ./vault/data:/vault/data
#       - ./vault/logs:/vault/logs
#     environment:
#       - VAULT_TOKEN=${VAULT_TOKEN}
#     cap_add:
#         #capacity to container add
#         - IPC_LOCK
# networks:
#   backend:
#     driver: bridge
          
# services:
#   db:
#     restart: always
#     image: postgres:latest
#     environment:
#      - POSTGRES_USER=enms
#      - POSTGRES_PASSWORD=enms
#      - POSTGRES_DB=enms
#     expose:
#       - 5432
#     networks:
#       - db_network
#   enms:
#     restart: always
#     environment:
#      - DATABASE_URL=postgresql://enms:enms@db:5432/enms
#      - SECRET_KEY=docker
#      - CONFIG_MODE=Production
#      - USE_VAULT=0
#     build:
#       context: ../
#       dockerfile: docker/Dockerfile
#     ports:
#       - "5000:5000"
#     networks:
#       - db_network
#       - web_network
#     depends_on:
#       - db
#   nginx:
#     restart: always
#     image: nginx:latest
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx:/etc/nginx/conf.d
#     networks:
#       - web_network
#     depends_on:
#       - enms
# networks:
#   db_network:
#     driver: bridge
#   web_network:
#     driver: bridge